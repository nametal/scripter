#!/bin/bash

currentDir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
otherBrc=~/tools/fixed/services_rc/*

# unicode symbol
uSMILE='\u263A'
uFROWN='\u2639'
uCHECK='\u2611'
uWRONG='\u2612'

# color constants
clDARKGRAY="\e[0;30m"
clRED="\e[0;31m"
clGREEN="\e[0;32m"
clYELLOW="\e[0;33m"
clBLUE="\e[0;34m"
clPURPLE="\e[0;35m"
clTURQUOISE="\e[0;36m"
clWHITE="\e[0;37m"
# bold color
cDARKGRAY="\e[1;30m"
cRED="\e[1;31m"
cGREEN="\e[1;32m"
cYELLOW="\e[1;33m"
cBLUE="\e[1;34m"
cPURPLE="\e[1;35m"
cTURQUOISE="\e[1;36m"
cWHITE="\e[1;37m"
cLIGHTGRAY="\e[00m"

# color with non-printing char (to correctly calculate word-wrapping)
cclDARKGRAY='\[\e[0;30m\]'
cclRED='\[\e[0;31m\]'
cclGREEN='\[\e[0;32m\]'
cclYELLOW='\[\e[0;33m\]'
cclBLUE='\[\e[0;34m\]'
cclPURPLE='\[\e[0;35m\]'
cclTURQUOISE='\[\e[0;36m\]'
cclWHITE='\[\e[0;37m\]'
# bold color
ccDARKGRAY='\[\e[1;30m\]'
ccRED='\[\e[1;31m\]'
ccGREEN='\[\e[1;32m\]'
ccYELLOW='\[\e[1;33m\]'
ccBLUE='\[\e[1;34m\]'
ccPURPLE='\[\e[1;35m\]'
ccTURQUOISE='\[\e[1;36m\]'
ccWHITE='\[\e[1;37m\]'
ccLIGHTGRAY='\[\e[00m\]'

# background color
bDARKGRAY='\e[40m'
bRED='\e[41m'
bGREEN='\e[42m'
bYELLOW='\e[43m'
bBLUE='\e[44m'
bPURPLE='\e[45m'
bTURQUOISE='\e[46m'
bWHITE='\e[47m'


# Color info
# Attribute codes:
#     00=none
#     01=bold
#     04=underscore
#     05=blink
#     07=reverse
#     08=concealed

# Text color codes:
#     30=black
#     31=red
#     32=green
#     33=yellow
#     34=blue
#     35=magenta
#     36=cyan
#     37=white

# Background color codes:
#     40=black
#     41=red
#     42=green
#     43=yellow
#     44=blue
#     45=magenta
#     46=cyan
#     47=white
colors-info() {
	local fgc bgc vals seq0

	printf "Color escapes are %s\n" '\e[${value};...;${value}m'
	printf "Values 30..37 are \e[33mforeground colors\e[m\n"
	printf "Values 40..47 are \e[43mbackground colors\e[m\n"
	printf "Value  1 gives a  \e[1mbold-faced look\e[m\n\n"

	# foreground colors
	for fgc in {30..37}; do
		# background colors
		for bgc in {40..47}; do
			fgc=${fgc#37} # white
			bgc=${bgc#40} # black

			vals="${fgc:+$fgc;}${bgc}"
			vals=${vals%%;}

			seq0="${vals:+\e[${vals}m}"
			printf "  %-9s" "${seq0:-(default)}"
			printf " ${seq0}TEXT\e[m"
			printf " \e[${vals:+${vals+$vals;}}1mBOLD\e[m"
		done
		echo; echo
	done
}

ask-prompt() {
	local dummyUser="user"
	local dummyHost="my-pc"
	local dummyBranch="[master]:"
	local dummyDir="~/scripter"
	
	# default
	prompt1="$cYELLOW$dummyBranch$cGREEN$dummyUser@$dummyHost$cLIGHTGRAY:$cBLUE$dummyDir$cLIGHTGRAY\$ "
	# midnight
	prompt2="$cTURQUOISE$dummyBranch$cBLUE$dummyUser@$dummyHost$cLIGHTGRAY:$cPURPLE$dummyDir$cLIGHTGRAY\$ "

	echo -e "(1) Greenish  \t${prompt1}"
	echo -e "(2) Blueish   \t${prompt2}"
}

set-env() {
	local locase=$(echo "$1" | tr '[:upper:]' '[:lower:]')
	local upcase=$(echo "$1" | tr '[:lower:]' '[:upper:]')
	sed -i -re "s/(env1:)[^:]*$/\1${locase}/" $currentDir/term
	sed -i -re "s/(env2:)[^:]*$/\1${upcase}/" $currentDir/term
}

change-theme() {	
	sed -i -re "s/(theme:)[^:]*$/\1${1}/" $currentDir/term
	coloring-tab $1
}

coloring-tab() {
	case $1 in
		1) # greenish
			local themePath=gtk.css.greenish;;
		2) # blueish
			local themePath=gtk.css.bluish;;
		*) return 1;;
	esac

	local gtkPath="${HOME}/.config/gtk-3.0/"
	if [ ! -f ${gtkPath} ]; then
		mkdir -p ${gtkPath}
		touch ${gtkPath}/gtk.css
	fi

	cp ${currentDir}/${themePath} ${gtkPath}/gtk.css --backup
}

colors-info2() {
	for((i=16; i<256; i++)); do
	    printf "\e[48;5;${i}m%03d" $i;
	    printf '\e[0m';
	    [ ! $((($i - 15) % 6)) -eq 0 ] && printf ' ' || printf '\n'
	done
}

colors-info3() {
	color=16;

	while [ $color -lt 245 ]; do
	    echo -e "$color: \\033[38;5;${color}mhello\\033[48;5;${color}mworld\\033[0m"
	    ((color++));
	done  
}

text-color() {
	if [ -z "$3" ]; then
		echo "usage: text-color <foreground> <background> <text>"
		return 1;
	fi

	# color range = 16 - 244
	local fgcolor=$1
	local bgcolor=$2
	shift
	shift
	local text=$@
	echo -e "\\033[48;5;${fgcolor};38;5;${bgcolor}m${text}\\033[0m"
}